@page "/AppointmentTrackings/Edits/{Id}"

@using PsychologyHealthCare.Repository.Models
@using PsychologyHealthCare.Service
@inject NavigationManager Navigation
@inject IAppointmentTrackingService AppointmentService
@inject ProgramTrackingService ProgramService

<h3>Create Appointment Tracking</h3>

@if (AppointmentTracking != null) {
    <EditForm Model="AppointmentTracking" OnValidSubmit="EditAppointmentTracking" FormName="editAppointmentForm">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="form-group">
            <label>Name</label>
            <InputText class="form-control" @bind-Value="AppointmentTracking.Name" />
        </div>

        <div class="form-group">
            <label>Start Time</label>
            <InputNumber TValue="long" class="form-control" @bind-Value="AppointmentTracking.StartTime" />
        </div>

        <div class="form-group">
            <label>End Time</label>
            <InputNumber TValue="long" class="form-control" @bind-Value="AppointmentTracking.EndTime" />
        </div>

        <div class="form-group">
            <label>Created Date</label>
            <InputDate class="form-control" @bind-Value="AppointmentTracking.CreatedDate" />
        </div>

        <div class="form-group">
            <label>Updated Date</label>
            <InputDate class="form-control" @bind-Value="AppointmentTracking.UpdatedDate" />
        </div>

        <div class="form-group">
            <label>Rating</label>
            <InputText class="form-control" @bind-Value="AppointmentTracking.Rating" />
        </div>

        <div class="form-group">
            <label>Holder</label>
            <InputText class="form-control" @bind-Value="AppointmentTracking.Holder" />
        </div>

        <div class="form-group">
            <label>Address</label>
            <InputText class="form-control" @bind-Value="AppointmentTracking.Address" />
        </div>

        <div class="form-group">
            <label>Type</label>
            <InputText class="form-control" @bind-Value="AppointmentTracking.Type" />
        </div>

        <div class="form-group">
            <label>System Status</label>
            <InputText class="form-control" @bind-Value="AppointmentTracking.SystemStatus" />
        </div>

        <div class="form-group">
            <label>Program Tracking</label>
            <InputSelect class="form-control" @bind-Value="AppointmentTracking.ProgramTrackingId">
                <option value="">-- Select Program --</option>
                @foreach (var program in programList!)
                {
                    <option value="@program.Id">@program.Name</option>
                }
            </InputSelect>
        </div>

        <div class="form-group">
            <button type="submit" class="btn btn-primary">Save</button>
        </div>
    </EditForm>
}

<div class="form-group">
    <button class="btn btn-secondary" @onclick="NavigateToIndex">Back to List</button>
</div>

@code {
    [Parameter] public string? Id { get; set; }

    [SupplyParameterFromForm(FormName = "editAppointmentForm")]
    private AppointmentTracking? AppointmentTracking { get; set; }
    private List<ProgramTracking>? programList = new List<ProgramTracking>();

    protected override async Task OnInitializedAsync()
    {
        AppointmentTracking ??= await AppointmentService.GetById(Id!);
        programList = await ProgramService.GetAllAsync();
    }

    private async Task EditAppointmentTracking()
    {
        await AppointmentService.Update(AppointmentTracking!);
        NavigateToIndex();
    }

    private void NavigateToIndex()
    {
        Navigation.NavigateTo("/AppointmentTrackings/Index");
    }
}