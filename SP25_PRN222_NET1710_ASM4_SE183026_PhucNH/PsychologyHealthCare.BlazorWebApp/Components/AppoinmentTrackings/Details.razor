@page "/TestResults/Details/{TestResultId}"
@rendermode InteractiveServer

@using PsychologyHealthCare.Repository.Models
@using PsychologyHealthCare.Service
@inject NavigationManager Navigation
@inject ITestResultService TestResultService
@inject TestAssessmentService TestAssessmentService

<h3>Test Result Details</h3>

@if (testResult == null)
{
    <p>Loading....</p>
}
else
{
    <EditForm Model="testResult" OnValidSubmit="UpdateTestResult">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <table class="table">
            <thead>
                <tr>
                    <th>Test Name</th>
                    <td>
                        <select class="form-control" @bind="testResult.TestId">
                            @foreach (var test in tests)
                            {
                                <option value="@test.Id">@test.Name</option>
                            }
                        </select>
                    </td>
                </tr>
                <tr>
                    <th>Answers</th>
                    <td><input class="form-control" type="text" @bind="testResult.Answers" /></td>
                </tr>
                <tr>
                    <th>Score</th>
                    <td><input class="form-control" type="number" @bind="testResult.Score" /></td>
                </tr>
                <tr>
                    <th>Created At</th>
                    <td><input class="form-control" type="datetime-local" @bind="testResult.CompletionDate" /></td>
                </tr>
                <tr>
                    <th>Status</th>
                    <td><input class="form-control" type="text" @bind="testResult.Status" /></td>
                </tr>
                <tr>
                    <th>Created By</th>
                    <td><input class="form-control" type="text" @bind="testResult.CreatedBy" /></td>
                </tr>
                <tr>
                    <th>Completion Date</th>
                    <td>@testResult.CompletionDate.ToString("dd-MM-yyyy HH:mm:ss")</td>
                </tr>
                <tr>
                    <td>
                        <button class="btn btn-outline-primary" type="submit">Save</button>
                    </td>
                </tr>
            </thead>
        </table>
    </EditForm>
    <button class="btn btn-danger" @onclick="DeleteTestResult">Delete</button>
}

@code {
    private TestResult testResult;
    private List<AssessmentTest> tests;

    [Parameter]
    public string TestResultId { get; set; }

    protected override async Task OnInitializedAsync()
    {
        tests = await TestAssessmentService.GetAllAsync();
        testResult = await TestResultService.GetById(TestResultId);
    }

    private async Task DeleteTestResult()
    {
        await TestResultService.Delete(testResult);
        Navigation.NavigateTo("/TestResults/Index");
    }

    private async Task UpdateTestResult()
    {
        testResult.CompletionDate = DateTime.Now;
        testResult.Test = null;
        await TestResultService.Update(testResult);
        Navigation.NavigateTo("/TestResults/Index");
    }
}